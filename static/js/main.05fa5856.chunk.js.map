{"version":3,"sources":["images/user.png","api/movieApi.js","api/MovieApiKey.js","redux/reducer/movieSlice.js","components/Header/Header.js","components/Footer/Footer.js","components/MovieCard/MovieCard.js","settings/settings.js","components/MovieListing/MovieListing.js","components/Home/Home.js","components/MovieDetail/MovieDetail.js","components/PageNotFound/PageNotFound.js","App.js","redux/store.js","index.js"],"names":["axios","create","baseURL","APIkey","fetchAsyncMovies","createAsyncThunk","term","a","movieApi","get","response","data","fetchAsyncShows","fetchAsyncMovieOrShowDetail","id","movieSlice","createSlice","name","initialState","movies","shows","selectMovieOrShow","reducers","removeSelectedMovieOrShow","state","extraReducers","pending","console","log","fulfilled","payload","rejected","actions","getAllMovies","getAllShows","getSelectedMovieOrShow","Header","useState","setTerm","dispatch","useDispatch","className","to","onSubmit","e","preventDefault","type","value","placeholder","onChange","target","src","user","alt","Footer","MovieCard","props","imdbID","Poster","Title","Year","Settings","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","initialSlide","MovieListing","renderMovies","renderShows","useSelector","Response","Search","map","movie","index","Error","show","Home","useEffect","MovieDetail","useParams","Object","keys","length","imdbRating","imdbVotes","Runtime","Plot","Director","Actors","Genre","Language","Awards","PageNotFound","App","path","exact","component","store","configureStore","reducer","moviesReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05fa5856.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.109eb920.png\";","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL:'https://www.omdbapi.com/',\n})","export const APIkey = '2311ff61'","import {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\nimport movieApi from \"../../api/movieApi\";\nimport {APIkey} from \"../../api/MovieApiKey\";\n\nexport const fetchAsyncMovies = createAsyncThunk('movies/fetchAsyncMovies',\n    async (term) => {\n        const response = await movieApi\n            .get(`?apiKey=${APIkey}&s=${term}&type=movie`)\n        return response.data\n    })\n\nexport const fetchAsyncShows = createAsyncThunk('movies/fetchAsyncShows',\n    async (term) => {\n        const response = await movieApi\n            .get(`?apiKey=${APIkey}&s=${term}&type=series`)\n        return response.data\n    })\n\nexport const fetchAsyncMovieOrShowDetail = createAsyncThunk('movies/fetchAsyncMovieOrShowDetail',\n    async (id) => {\n        const response = await movieApi\n            .get(`?apiKey=${APIkey}&i=${id}&Plot=full`)\n        return response.data\n    })\n\nconst initialState = {\n    movies: {},\n    shows: {},\n    selectMovieOrShow: {}\n}\n\nconst movieSlice = createSlice({\n    name: 'movies',\n    initialState,\n    reducers: {\n        removeSelectedMovieOrShow: (state) => {\n            state.selectMovieOrShow = {};\n        }\n    },\n    extraReducers: {\n        [fetchAsyncMovies.pending]: () => {\n            console.log('Pending');\n        },\n        [fetchAsyncMovies.fulfilled]: (state, {payload}) => {\n            console.log('Fetched Successfully!');\n            return {...state, movies: payload};\n        },\n        [fetchAsyncMovies.rejected]: () => {\n            console.log('Rejected!');\n        },\n        [fetchAsyncShows.fulfilled]: (state, {payload}) => {\n            console.log('Fetched Successfully!');\n            return {...state, shows: payload};\n        },\n        [fetchAsyncMovieOrShowDetail.fulfilled]: (state, {payload}) => {\n            console.log('Fetched Successfully!');\n            return {...state, selectMovieOrShow: payload};\n        },\n    },\n})\n\nexport const {removeSelectedMovieOrShow} = movieSlice.actions;\nexport const getAllMovies = (state) => state.movies.movies;\nexport const getAllShows = (state) => state.movies.shows;\nexport const getSelectedMovieOrShow = (state) => state.movies.selectMovieOrShow;\nexport default movieSlice.reducer;","import React, {useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport user from '../../images/user.png';\nimport './Header.scss';\nimport {useDispatch} from \"react-redux\";\nimport {fetchAsyncMovies, fetchAsyncShows} from \"../../redux/reducer/movieSlice\";\n\nconst Header = () => {\n    const [term, setTerm] = useState('');\n    const dispatch = useDispatch();\n    const submitHandler = (e) => {\n      e.preventDefault();\n        dispatch(fetchAsyncMovies(term));\n        dispatch(fetchAsyncShows(term));\n        setTerm('');\n\n    }\n    return (\n        <div className='header'>\n            <div className='logo'><Link to='/'>Movie App</Link></div>\n            <div className='search-bar'>\n            <form onSubmit={submitHandler}>\n                <input type='text'\n                       value={term}\n                       placeholder='Search Movies or Shows'\n                       onChange={(e) => setTerm(e.target.value)}/>\n                <button type='submit'><i className='fa fa-search'> </i></button>\n            </form>\n            </div>\n            <div className='user-image'>\n                <img src={user} alt='user'/>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport './Footer.scss'\n\nconst Footer = () => {\n    return (\n        <div className='footer'>\n           <div> Movie App</div>\n            <div>2021, Movie, Ink. or its affiliates</div>\n        </div>\n    );\n};\n\nexport default Footer;","import React from 'react';\nimport './MovieCard.scss'\nimport {Link} from \"react-router-dom\";\n\nconst MovieCard = (props) => {\n    const {data} = props;\n    return (\n        <div className='card-item'>\n            <Link to={`/movie/${data.imdbID}`}>\n                <div className='card-inner'>\n                    <div className='card-top'>\n                        <img src={data.Poster} alt={data.Title}/>\n                    </div>\n                    <div className='card-bottom'>\n                        <div className='card-info'>\n                            <h4> {data.Title} </h4>\n                            <p>{data.Year}</p>\n                        </div>\n                    </div>\n                </div>\n            </Link>\n        </div>\n    );\n};\n\nexport default MovieCard;","export const Settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 6,\n    slidesToScroll: 3,\n    responsive: [\n        {\n            breakpoint: 500,\n            settings: {\n                slidesToShow: 5,\n                slidesToScroll: 4,\n                infinite: true,\n                dots: false\n            }\n        },\n        {\n            breakpoint: 1300,\n            settings: {\n                slidesToShow: 4,\n                slidesToScroll: 3,\n                infinite: true,\n                dots: false\n            }\n        },\n        {\n            breakpoint: 1000,\n            settings: {\n                slidesToShow: 3,\n                slidesToScroll: 3,\n                infinite: true,\n                dots: false\n            }\n        },\n        {\n            breakpoint: 750,\n            settings: {\n                slidesToShow: 2,\n                slidesToScroll: 2,\n                initialSlide: 2\n            }\n        },\n        {\n            breakpoint: 480,\n            settings: {\n                slidesToShow: 1,\n                slidesToScroll: 1\n            }\n        }\n    ]\n}","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {getAllMovies, getAllShows} from \"../../redux/reducer/movieSlice\";\nimport MovieCard from \"../MovieCard/MovieCard\";\nimport './MovieListing.scss'\nimport Slider from 'react-slick'\nimport {Settings} from \"../../settings/settings\";\n\nconst MovieListing = () => {\n    const movies = useSelector(getAllMovies);\n    const shows = useSelector(getAllShows);\n    let renderMovies, renderShows = '';\n\n        renderMovies = movies.Response === \"True\" ? (\n            movies.Search.map((movie, index) => (\n                <MovieCard key={index} data={movie}/>\n            ))\n        ) : (\n            <div className='movies-error'>\n                <h3>{movies.Error}</h3>\n            </div>\n        );\n\n    renderShows = shows.Response === \"True\" ? (\n        shows.Search.map((show, index) => (\n            <MovieCard key={index} data={show}/>\n        ))\n    ) : (\n        <div className='movies-error'>\n            <h3>{shows.Error}</h3>\n        </div>\n    );\n\n    return (\n      <div className='move-wrapper'>\n          <div className='movie-list'>\n            <h2>Movies</h2>\n              <div className='movie-container'>\n                  <Slider {...Settings}>{renderMovies}</Slider>\n              </div>\n          </div>\n          <div className='show-list'>\n              <h2>Shows</h2>\n              <div className='movie-container'>\n                  <Slider {...Settings}>{renderShows}</Slider>\n              </div>\n          </div>\n      </div>\n    );\n};\nexport default MovieListing;","import React, {useEffect} from 'react';\nimport MovieListing from \"../MovieListing/MovieListing\";\nimport {useDispatch} from \"react-redux\";\nimport {fetchAsyncMovies, fetchAsyncShows} from \"../../redux/reducer/movieSlice\";\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    const movieText = 'Harry';\n    const showText = 'Friends';\n    useEffect(() => {\n        dispatch(fetchAsyncMovies(movieText));\n        dispatch(fetchAsyncShows(showText));\n    }, [dispatch])\n\n    return (\n        <div>\n            <div className='banner-img'> </div>\n            <MovieListing/>\n        </div>\n    );\n};\n\nexport default Home;","import React, {useEffect} from 'react';\nimport {useParams} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    fetchAsyncMovieOrShowDetail,\n    getSelectedMovieOrShow,\n    removeSelectedMovieOrShow\n} from \"../../redux/reducer/movieSlice\";\nimport './MovieDetail.scss'\n\nconst MovieDetail = () => {\n    const {imdbID} = useParams();\n    const dispatch = useDispatch();\n    const data = useSelector(getSelectedMovieOrShow);\n    useEffect(() => {\n        dispatch(fetchAsyncMovieOrShowDetail(imdbID));\n        return () => {\n            dispatch(removeSelectedMovieOrShow())\n        }\n    }, [dispatch, imdbID])\n\n    return (\n            <div className='movie-section'>\n                {Object.keys(data).length === 0 ?\n                    (<div>...Loading</div>)\n                :(\n                <>\n                    <div className='section-left'>\n                        <div className='movie-title'>{data.Title}</div>\n                        <div className='movie-rating'>\n                     <span>\n                         IMDB Rating <i className='fa fa-star'></i> : {data.imdbRating}\n                     </span>\n                            <span>\n                         IMDB Votes <i className='fa fa-thumbs-up'></i> : {data.imdbVotes}\n                     </span>\n                            <span>\n                         Runtime <i className='fa fa-film'></i> : {data.Runtime}\n                     </span>\n                            <span>\n                         Year <i className='fa fa-calendar'></i> : {data.Year}\n                     </span>\n                        </div>\n                        <div className='movie-plot'>\n                            {data.Plot}\n                        </div>\n                        <div className='movie-info'>\n                            <div>\n                                <span>Director</span>\n                                <span>{data.Director}</span>\n                            </div>\n                            <div>\n                                <span>Stars</span>\n                                <span>{data.Actors}</span>\n                            </div>\n                            <div>\n                                <span>Generes</span>\n                                <span>{data.Genre}</span>\n                            </div>\n                            <div>\n                                <span>Languages</span>\n                                <span>{data.Language}</span>\n                            </div>\n                            <div>\n                                <span>Awards</span>\n                                <span>{data.Awards}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='section-right'>\n                        <img src={data.Poster} alt={data.Title}/>\n                    </div>\n                </>)}\n            </div>\n    );\n};\n\nexport default MovieDetail;","import React from 'react';\n\nconst PageNotFound = () => {\n    return (\n        <div>\n            PageNotFound\n        </div>\n    );\n};\n\nexport default PageNotFound;","import React from 'react';\nimport './App.scss';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Home from \"./components/Home/Home\";\nimport MovieDetail from \"./components/MovieDetail/MovieDetail\";\nimport PageNotFound from \"./components/PageNotFound/PageNotFound\";\n\nconst App = () => {\n    return (\n        <div className='App'>\n            <Router>\n                <Header> </Header>\n                <div className='container'>\n                    <Switch>\n                        <Route path='/' exact component={Home}/>\n                        <Route path='/movie/:imdbID' component={MovieDetail}/>\n                        <Route component={PageNotFound}/>\n                    </Switch>\n                </div>\n                <Footer />\n            </Router>\n        </div>\n    );\n};\n\nexport default App;","import {configureStore} from \"@reduxjs/toolkit\";\nimport moviesReducer from './reducer/movieSlice'\n\nexport const store = configureStore({\n    reducer:{\n       movies: moviesReducer,\n    }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}